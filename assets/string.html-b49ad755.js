import{_ as i}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as p,c as l,a as e,b as n,d as a,e as t}from"./app-3baa2586.js";const c={},r={class:"hint-container info"},d=e("p",{class:"hint-container-title"},"相关信息",-1),u=e("p",null,"作者：小何",-1),h=e("h3",{id:"stringutils-isempty",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#stringutils-isempty","aria-hidden":"true"},"#"),n(" StringUtils.isEmpty")],-1),m=t(`<h4 id="别名" tabindex="-1"><a class="header-anchor" href="#别名" aria-hidden="true">#</a> 别名</h4><p>isEmptyString</p><h4 id="参数" tabindex="-1"><a class="header-anchor" href="#参数" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>str</code> (string | null)：字符串</p></li><li><p><code>[trim=false]</code> (boolean)：是否 <code>String#trim()</code></p></li></ul><h4 id="返回" tabindex="-1"><a class="header-anchor" href="#返回" aria-hidden="true">#</a> 返回</h4><p><code>boolean</code>：是否为空字符串</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str3 <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str4 <span class="token operator">=</span> <span class="token string">&quot;some string&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; true</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; true</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str3<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; true</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>str4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-isnotempty" tabindex="-1"><a class="header-anchor" href="#stringutils-isnotempty" aria-hidden="true">#</a> StringUtils.isNotEmpty</h3>`,8),k=t(`<h4 id="别名-1" tabindex="-1"><a class="header-anchor" href="#别名-1" aria-hidden="true">#</a> 别名</h4><p>isNotEmptyString</p><h4 id="参数-1" tabindex="-1"><a class="header-anchor" href="#参数-1" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>str</code> (string | null)：字符串</p></li><li><p><code>[trim=false]</code> (boolean)：是否 <code>String#trim()</code></p></li></ul><h4 id="返回-1" tabindex="-1"><a class="header-anchor" href="#返回-1" aria-hidden="true">#</a> 返回</h4><p><code>boolean</code>：是否为非空字符串</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str3 <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str4 <span class="token operator">=</span> <span class="token string">&quot;some string&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; false</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; false</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>str3<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; false</span>

StringUtils<span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>str4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-split" tabindex="-1"><a class="header-anchor" href="#stringutils-split" aria-hidden="true">#</a> StringUtils.split</h3>`,8),v=t(`<p>该方法与 <code>String#split</code> 差别是当 <code>str</code> 为 <code>null</code> 或者 <code>&quot;&quot;</code> 时的返回值为 <code>[]</code>，并且可选择是否先去除首尾的分隔符再进行分割</p><h4 id="参数-2" tabindex="-1"><a class="header-anchor" href="#参数-2" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>str</code> (string | null)：待分割字符串</p></li><li><p><code>[separator=&quot;,&quot;]</code> (string)：分隔符</p></li><li><p><code>[options]</code> (<a href="#isplitoptions">ISplitOptions</a>)：配置项</p></li></ul><h4 id="类型" tabindex="-1"><a class="header-anchor" href="#类型" aria-hidden="true">#</a> 类型</h4><h5 id="isplitoptions" tabindex="-1"><a class="header-anchor" href="#isplitoptions" aria-hidden="true">#</a> ISplitOptions</h5><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>removeLeadingSeparator</td><td>是否移除开头的分隔符</td><td>boolean</td><td>-</td><td><code>true</code></td></tr><tr><td>removeTrailingSeparator</td><td>是否移除结尾的分隔符</td><td>boolean</td><td>-</td><td><code>true</code></td></tr></tbody></table><h4 id="返回-2" tabindex="-1"><a class="header-anchor" href="#返回-2" aria-hidden="true">#</a> 返回</h4><p><code>string[]</code>：字符串分割结果数组</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str3 <span class="token operator">=</span> <span class="token string">&quot;some,string&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str4 <span class="token operator">=</span> <span class="token string">&quot;;some;string;&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; []</span>

StringUtils<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; []</span>

StringUtils<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>str3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [&quot;some&quot;, &quot;string&quot;]</span>

StringUtils<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span>str4<span class="token punctuation">,</span> <span class="token string">&quot;;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; [&quot;some&quot;, &quot;string&quot;]</span>
<span class="token comment">// 字符串首尾的分隔符被去掉了，如果使用String#split的返回值为 [&quot;&quot;, &quot;some&quot;, &quot;string&quot;, &quot;&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-underline2hump" tabindex="-1"><a class="header-anchor" href="#stringutils-underline2hump" aria-hidden="true">#</a> StringUtils.underline2hump</h3>`,10),b=t(`<h4 id="参数-3" tabindex="-1"><a class="header-anchor" href="#参数-3" aria-hidden="true">#</a> 参数</h4><ul><li><code>str</code> (string | null)：下划线风格字符串</li></ul><h4 id="返回-3" tabindex="-1"><a class="header-anchor" href="#返回-3" aria-hidden="true">#</a> 返回</h4><p><code>string | null</code>：驼峰风格字符串</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;some_string&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">underline2hump</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; null</span>

StringUtils<span class="token punctuation">.</span><span class="token function">underline2hump</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;someString&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-hump2underline" tabindex="-1"><a class="header-anchor" href="#stringutils-hump2underline" aria-hidden="true">#</a> StringUtils.hump2underline</h3>`,6),g=t(`<h4 id="参数-4" tabindex="-1"><a class="header-anchor" href="#参数-4" aria-hidden="true">#</a> 参数</h4><ul><li><code>str</code> (string | null)：驼峰风格字符串</li></ul><h4 id="返回-4" tabindex="-1"><a class="header-anchor" href="#返回-4" aria-hidden="true">#</a> 返回</h4><p><code>string | null</code>：下划线风格字符串</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> str1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> str2 <span class="token operator">=</span> <span class="token string">&quot;someString&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">hump2underline</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; null</span>

StringUtils<span class="token punctuation">.</span><span class="token function">hump2underline</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;some_string&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-number2chinese" tabindex="-1"><a class="header-anchor" href="#stringutils-number2chinese" aria-hidden="true">#</a> StringUtils.number2chinese</h3>`,6),f=t(`<h4 id="参数-5" tabindex="-1"><a class="header-anchor" href="#参数-5" aria-hidden="true">#</a> 参数</h4><ul><li><code>x</code> (number)：阿拉伯数字</li></ul><h4 id="返回-5" tabindex="-1"><a class="header-anchor" href="#返回-5" aria-hidden="true">#</a> 返回</h4><p><code>string</code>：中文数字</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>StringUtils<span class="token punctuation">.</span><span class="token function">number2chinese</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 一百二十三</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-converturl" tabindex="-1"><a class="header-anchor" href="#stringutils-converturl" aria-hidden="true">#</a> StringUtils.convertUrl</h3>`,6),q=t(`<h4 id="参数-6" tabindex="-1"><a class="header-anchor" href="#参数-6" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>value</code> (string | null)：Url地址</p></li><li><p><code>[options]</code> (<a href="#iconverturloptions">IConvertUrlOptions</a>)：配置项</p></li></ul><h4 id="类型-1" tabindex="-1"><a class="header-anchor" href="#类型-1" aria-hidden="true">#</a> 类型</h4><h5 id="iconverturloptions" tabindex="-1"><a class="header-anchor" href="#iconverturloptions" aria-hidden="true">#</a> IConvertUrlOptions</h5><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>base</td><td>Url基地址</td><td>string</td><td>-</td><td><code>StringUtils.ConvertUrlBase</code></td></tr><tr><td>prefix</td><td>Url额外前缀</td><td>string / null</td><td>-</td><td>-</td></tr></tbody></table><h4 id="返回-6" tabindex="-1"><a class="header-anchor" href="#返回-6" aria-hidden="true">#</a> 返回</h4><p><code>string | null</code>：转换后的Url地址</p><h4 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h4><ul><li><p><code>StringUtils.ConvertUrlConfig.base=&quot;&quot;</code> (string)：默认Url基地址</p></li><li><p><code>StringUtils.ConvertUrlConfig.excludes=[&quot;http&quot;,&quot;ws&quot;,&quot;udp&quot;,&quot;tcp&quot;]</code> (string[])：例外的Url前缀</p></li></ul><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">const</span> url1 <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> url2 <span class="token operator">=</span> <span class="token string">&quot;/someurl&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> url3 <span class="token operator">=</span> <span class="token string">&quot;someurl&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> url4 <span class="token operator">=</span> <span class="token string">&quot;https://someurl&quot;</span><span class="token punctuation">;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">convertUrl</span><span class="token punctuation">(</span>url1<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; null</span>

StringUtils<span class="token punctuation">.</span><span class="token function">convertUrl</span><span class="token punctuation">(</span>url2<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;#Url基地址/someurl&quot;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">convertUrl</span><span class="token punctuation">(</span>url3<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;#Url基地址/someurl&quot;</span>
<span class="token comment">// 自动添加了斜杠</span>

StringUtils<span class="token punctuation">.</span><span class="token function">convertUrl</span><span class="token punctuation">(</span>url4<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;https://someurl&quot;</span>
<span class="token comment">// 如果源路径带有协议头或者开头部分与base相同，则原样返回</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-uuid" tabindex="-1"><a class="header-anchor" href="#stringutils-uuid" aria-hidden="true">#</a> StringUtils.uuid</h3>`,11),y=t(`<p>若未指定长度会生成rfc4122标准的uuid，否则只是生成随机字符串</p><h4 id="参数-7" tabindex="-1"><a class="header-anchor" href="#参数-7" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>[length]</code> (number)：生成uuid的长度</p></li><li><p><code>[options]</code> (<a href="#iuuidoptions">IUuidOptions</a>)：配置项</p></li></ul><h4 id="类型-2" tabindex="-1"><a class="header-anchor" href="#类型-2" aria-hidden="true">#</a> 类型</h4><h5 id="iuuidoptions" tabindex="-1"><a class="header-anchor" href="#iuuidoptions" aria-hidden="true">#</a> IUuidOptions</h5><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>radix</td><td>生成uuid的基数</td><td>number / null</td><td>-</td><td>-</td></tr><tr><td>characters</td><td>参与生成uuid的字符</td><td>string</td><td>-</td><td><code>0~9A~Za~z</code></td></tr></tbody></table><h4 id="返回-7" tabindex="-1"><a class="header-anchor" href="#返回-7" aria-hidden="true">#</a> 返回</h4><p><code>string</code>：生成的uuid</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>StringUtils<span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;3D617847-76B7-41A2-AFF9-59947C2ED853&quot;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">uuid</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;YETA5lGLyG&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="stringutils-formatfilesize" tabindex="-1"><a class="header-anchor" href="#stringutils-formatfilesize" aria-hidden="true">#</a> StringUtils.formatFileSize</h3>`,10),x=t(`<h4 id="参数-8" tabindex="-1"><a class="header-anchor" href="#参数-8" aria-hidden="true">#</a> 参数</h4><ul><li><p><code>[bit=0]</code> (number)：文件大小（单位：b）</p></li><li><p><code>[options]</code> (<a href="#iformatfilesizeoptions">IFormatFileSizeOptions</a>)：配置项</p></li></ul><h5 id="iformatfilesizeoptions" tabindex="-1"><a class="header-anchor" href="#iformatfilesizeoptions" aria-hidden="true">#</a> IFormatFileSizeOptions</h5><table><thead><tr><th>参数</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>lowercase</td><td>单位是否小写</td><td>boolean</td><td>-</td><td><code>true</code></td></tr><tr><td>digits</td><td>小数位数</td><td>number / null</td><td>-</td><td>-</td></tr></tbody></table><h4 id="返回-8" tabindex="-1"><a class="header-anchor" href="#返回-8" aria-hidden="true">#</a> 返回</h4><p><code>string</code>：格式化结果</p><details class="hint-container details"><summary>使用示例（点击展开查看）</summary><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>StringUtils<span class="token punctuation">.</span><span class="token function">formatFileSize</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;9.765625kb&quot;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">formatFileSize</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">lowercase</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;9.765625KB&quot;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">formatFileSize</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">digits</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;9.77kb&quot;</span>

StringUtils<span class="token punctuation">.</span><span class="token function">formatFileSize</span><span class="token punctuation">(</span><span class="token number">10000</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">lowercase</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token literal-property property">digits</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;9.77KB&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,7);function S(U,_){const s=o("badge");return p(),l("div",null,[e("div",r,[d,e("p",null,[n("Since："),a(s,{text:"0.0.1"})]),u]),h,a(s,{text:"0.0.1"}),n(" 是否为空字符串"),m,a(s,{text:"0.0.1"}),n(" 是否为非空字符串"),k,a(s,{text:"0.0.1"}),n(" 分割字符串"),v,a(s,{text:"0.0.1"}),n(" 下划线风格转驼峰风格字符串"),b,a(s,{text:"0.0.1"}),n(" 驼峰风格转下划线风格字符串"),g,a(s,{text:"0.0.4"}),n(" 阿拉伯数字转为中文数字 (仅支持正整数)"),f,a(s,{text:"0.0.6"}),n(" 转换Url相对路径"),q,a(s,{text:"0.0.6"}),n(" 生成uuid"),y,a(s,{text:"0.0.6"}),n(" 格式化文件大小"),x])}const E=i(c,[["render",S],["__file","string.html.vue"]]);export{E as default};
