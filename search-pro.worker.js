const nt="ENTRIES",T="KEYS",V="VALUES",F="";class D{constructor(t,s){const n=t._tree,o=Array.from(n.keys());this.set=t,this._type=s,this._path=o.length>0?[{node:n,keys:o}]:[]}next(){const t=this.dive();return this.backtrack(),t}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:t,keys:s}=E(this._path);if(E(s)===F)return{done:!1,value:this.result()};const n=t.get(E(s));return this._path.push({node:n,keys:Array.from(n.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const t=E(this._path).keys;t.pop(),!(t.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:t})=>E(t)).filter(t=>t!==F).join("")}value(){return E(this._path).node.get(F)}result(){switch(this._type){case V:return this.value();case T:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}}const E=e=>e[e.length-1],ot=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const o=t.length+1,u=o+s,i=new Uint8Array(u*o).fill(s+1);for(let r=0;r<o;++r)i[r]=r;for(let r=1;r<u;++r)i[r*o]=r;return W(e,t,s,n,i,1,o,""),n},W=(e,t,s,n,o,u,i,r)=>{const h=u*i;t:for(const c of e.keys())if(c===F){const a=o[h-1];a<=s&&n.set(r,[e.get(c),a])}else{let a=u;for(let l=0;l<c.length;++l,++a){const p=c[l],f=i*a,g=f-i;let d=o[f];const m=Math.max(0,a-s-1),y=Math.min(i-1,a+s);for(let _=m;_<y;++_){const b=p!==t[_],z=o[g+_]+ +b,A=o[g+_+1]+1,w=o[f+_]+1,L=o[f+_+1]=Math.min(z,A,w);L<d&&(d=L)}if(d>s)continue t}W(e.get(c),t,s,n,o,a,i,r+c)}};class C{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=x(this._tree,t.slice(this._prefix.length));if(s===void 0){const[o,u]=I(n);for(const i of o.keys())if(i!==F&&i.startsWith(u)){const r=new Map;return r.set(i.slice(u.length),o.get(i)),new C(r,t)}}return new C(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,ut(this._tree,t)}entries(){return new D(this,nt)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return ot(this._tree,t,s)}get(t){const s=O(this._tree,t);return s!==void 0?s.get(F):void 0}has(t){const s=O(this._tree,t);return s!==void 0&&s.has(F)}keys(){return new D(this,T)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,M(this._tree,t).set(F,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);return n.set(F,s(n.get(F))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=M(this._tree,t);let o=n.get(F);return o===void 0&&n.set(F,o=s()),o}values(){return new D(this,V)}[Symbol.iterator](){return this.entries()}static from(t){const s=new C;for(const[n,o]of t)s.set(n,o);return s}static fromObject(t){return C.from(Object.entries(t))}}const x=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==F&&t.startsWith(n))return s.push([e,n]),x(e.get(n),t.slice(n.length),s);return s.push([e,t]),x(void 0,"",s)},O=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==F&&t.startsWith(s))return O(e.get(s),t.slice(s.length))},M=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const u of e.keys())if(u!==F&&t[n]===u[0]){const i=Math.min(s-n,u.length);let r=1;for(;r<i&&t[n+r]===u[r];)++r;const h=e.get(u);if(r===u.length)e=h;else{const c=new Map;c.set(u.slice(r),h),e.set(t.slice(n,n+r),c),e.delete(u),e=c}n+=r;continue t}const o=new Map;return e.set(t.slice(n),o),o}return e},ut=(e,t)=>{const[s,n]=x(e,t);if(s!==void 0){if(s.delete(F),s.size===0)R(n);else if(s.size===1){const[o,u]=s.entries().next().value;$(n,o,u)}}},R=e=>{if(e.length===0)return;const[t,s]=I(e);if(t.delete(s),t.size===0)R(e.slice(0,-1));else if(t.size===1){const[n,o]=t.entries().next().value;n!==F&&$(e.slice(0,-1),n,o)}},$=(e,t,s)=>{if(e.length===0)return;const[n,o]=I(e);n.set(o+t,s),n.delete(o)},I=e=>e[e.length-1],it=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,S="or",P="and",rt="and_not",ct=(e,t)=>{e.includes(t)||e.push(t)},q=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},G=({score:e},{score:t})=>t-e,lt=()=>new Map,k=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},N=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,ht={[S]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:o,terms:u,match:i}=t.get(s);n.score=n.score+o,n.match=Object.assign(n.match,i),q(n.terms,u)}}return e},[P]:(e,t)=>{const s=new Map;for(const n of t.keys()){const o=e.get(n);if(o==null)continue;const{score:u,terms:i,match:r}=t.get(n);q(o.terms,i),s.set(n,{score:o.score+u,terms:o.terms,match:Object.assign(o.match,r)})}return s},[rt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},at=(e,t,s,n,o,u)=>{const{k:i,b:r,d:h}=u;return Math.log(1+(s-t+.5)/(t+.5))*(h+e*(i+1)/(e+i*(1-r+r*n/o)))},dt=e=>(t,s,n)=>{const o=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,u=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:o,prefix:u}},ft={k:1.2,b:.7,d:.5},gt={idField:"id",extractField:(e,t)=>e[t],tokenize:e=>e.split(it),processTerm:e=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t)=>{typeof(console==null?void 0:console[e])=="function"&&console[e](t)},autoVacuum:!0},H={combineWith:S,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:ft},mt={combineWith:P,prefix:(e,t,s)=>t===s.length-1},pt={batchSize:1e3,batchWait:10},J={minDirtFactor:.1,minDirtCount:20},Ft={...pt,...J};class _t{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...gt,...t,autoVacuum:s,searchOptions:{...H,...t.searchOptions||{}},autoSuggestOptions:{...mt,...t.autoSuggestOptions||{}}},this._index=new C,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=J,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const o={};for(const[u,i]of n)o[u]=Object.fromEntries(i);t.push([s,o])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const yt=(e,t)=>{const s=e._idToShortId.get(t);if(s!=null)return e._storedFields.get(s)},U=(e,t,s,n)=>{for(const o of Object.keys(e._fieldIds))if(e._fieldIds[o]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${o}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},At=(e,t,s,n)=>{if(!e._index.has(n)){U(e,s,t,n);return}const o=e._index.fetch(n,lt),u=o.get(t);u==null||u.get(s)==null?U(e,s,t,n):u.get(s)<=1?u.size<=1?o.delete(t):u.delete(s):u.set(s,u.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},Y=(e,t=S)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(ht[s])||new Map},B=(e,t,s,n,o,u,i,r,h=new Map)=>{if(o==null)return h;for(const c of Object.keys(u)){const a=u[c],l=e._fieldIds[c],p=o.get(l);if(p==null)continue;let f=p.size;const g=e._avgFieldLength[l];for(const d of p.keys()){if(!e._documentIds.has(d)){At(e,l,d,s),f-=1;continue}const m=i?i(e._documentIds.get(d),s,e._storedFields.get(d)):1;if(!m)continue;const y=p.get(d),_=e._fieldLength.get(d)[l],b=at(y,f,e._documentCount,_,g,r),z=n*a*m*b,A=h.get(d);if(A){A.score+=z,ct(A.terms,t);const w=N(A.match,s);w?w.push(c):A.match[s]=[c]}else h.set(d,{score:z,terms:[t],match:{[s]:[c]}})}}return h},Ct=(e,t,s)=>{const n={...e._options.searchOptions,...s},o=(n.fields||e._options.fields).reduce((d,m)=>({...d,[m]:N(n.boost,m)||1}),{}),{boostDocument:u,weights:i,maxFuzzy:r,bm25:h}=n,{fuzzy:c,prefix:a}={...H.weights,...i},l=e._index.get(t.term),p=B(e,t.term,t.term,1,l,o,u,h);let f,g;if(t.prefix&&(f=e._index.atPrefix(t.term)),t.fuzzy){const d=t.fuzzy===!0?.2:t.fuzzy,m=d<1?Math.min(r,Math.round(t.term.length*d)):d;m&&(g=e._index.fuzzyGet(t.term,m))}if(f)for(const[d,m]of f){const y=d.length-t.term.length;if(!y)continue;g==null||g.delete(d);const _=a*d.length/(d.length+.3*y);B(e,t.term,d,_,m,o,u,h,p)}if(g)for(const d of g.keys()){const[m,y]=g.get(d);if(!y)continue;const _=c*d.length/(d.length+y);B(e,t.term,d,_,m,o,u,h,p)}return p},K=(e,t,s={})=>{if(typeof t!="string"){const a={...s,...t,queries:void 0},l=t.queries.map(p=>K(e,p,a));return Y(l,a.combineWith)}const{tokenize:n,processTerm:o,searchOptions:u}=e._options,i={tokenize:n,processTerm:o,...u,...s},{tokenize:r,processTerm:h}=i,c=r(t).flatMap(a=>h(a)).filter(a=>!!a).map(dt(i)).map(a=>Ct(e,a,i));return Y(c,i.combineWith)},X=(e,t,s={})=>{const n=K(e,t,s),o=[];for(const[u,{score:i,terms:r,match:h}]of n){const c=r.length,a={id:e._documentIds.get(u),score:i*c,terms:Object.keys(h),match:h};Object.assign(a,e._storedFields.get(u)),(s.filter==null||s.filter(a))&&o.push(a)}return o.sort(G),o},Et=(e,t,s={})=>{s={...e._options.autoSuggestOptions,...s};const n=new Map;for(const{score:u,terms:i}of X(e,t,s)){const r=i.join(" "),h=n.get(r);h!=null?(h.score+=u,h.count+=1):n.set(r,{score:u,terms:i,count:1})}const o=[];for(const[u,{score:i,terms:r,count:h}]of n)o.push({suggestion:u,terms:r,score:i/h});return o.sort(G),o},zt=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:o,fieldLength:u,averageFieldLength:i,storedFields:r,dirtCount:h,serializationVersion:c},a)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new _t(a);l._documentCount=t,l._nextId=s,l._documentIds=k(n),l._idToShortId=new Map,l._fieldIds=o,l._fieldLength=k(u),l._avgFieldLength=i,l._storedFields=k(r),l._dirtCount=h||0,l._index=new C;for(const[p,f]of l._documentIds)l._idToShortId.set(f,p);for(const[p,f]of e){const g=new Map;for(const d of Object.keys(f)){let m=f[d];c===1&&(m=m.ds),g.set(parseInt(d,10),k(m))}l._index.set(p,g)}return l},Q=Object.entries,wt=Object.fromEntries,j=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),o=[];let u=0,i=0;const r=(c,a=!1)=>{let l="";i===0?l=c.length>20?`… ${c.slice(-20)}`:c:a?l=c.length+i>100?`${c.slice(0,100-i)}… `:c:l=c.length>20?`${c.slice(0,20)} … ${c.slice(-20)}`:c,l&&o.push(l),i+=l.length,a||(o.push(["mark",t]),i+=t.length,i>=100&&o.push(" …"))};let h=s.indexOf(n,u);if(h===-1)return null;for(;h>=0;){const c=h+n.length;if(r(e.slice(u,h)),u=c,i>100)break;h=s.indexOf(n,u)}return i<100&&r(e.slice(u),!0),o},Z=/[\u4e00-\u9fa5]/g,tt=(e={})=>({fuzzy:.2,prefix:!0,processTerm:t=>{const s=t.match(Z)||[],n=t.replace(Z,"").toLowerCase();return n?[n,...s]:[...s]},...e}),xt=(e,t)=>t.contents.reduce((s,[,n])=>s+n,0)-e.contents.reduce((s,[,n])=>s+n,0),kt=(e,t)=>Math.max(...t.contents.map(([,s])=>s))-Math.max(...e.contents.map(([,s])=>s)),et=(e,t,s={})=>{const n={};return X(t,e,tt({boost:{h:2,t:1,c:4},...s})).forEach(o=>{const{id:u,terms:i,score:r}=o,h=u.includes("@"),c=u.includes("#"),[a,l]=u.split(/[#@]/),{contents:p}=n[a]??={title:"",contents:[]};if(h)p.push([{type:"customField",key:a,index:l,display:i.map(f=>o.c.map(g=>j(g,f))).flat().filter(f=>f!==null)},r]);else{const f=i.map(g=>j(o.h,g)).filter(g=>g!==null);if(f.length&&p.push([{type:c?"heading":"title",key:a,...c&&{anchor:l},display:f},r]),"t"in o)for(const g of o.t){const d=i.map(m=>j(g,m)).filter(m=>m!==null);d.length&&p.push([{type:"text",key:a,...c&&{anchor:l},display:d},r])}}}),Q(n).sort(([,o],[,u])=>"max"==="total"?xt(o,u):kt(o,u)).map(([o,{title:u,contents:i}])=>{if(!u){const r=yt(t,o);r&&(u=r.h)}return{title:u,contents:i.map(([r])=>r)}})},st=(e,t,s={})=>Et(t,e,tt(s)).map(({suggestion:n})=>n),v=wt(Q(JSON.parse("{\"/\":{\"documentCount\":68,\"nextId\":68,\"documentIds\":{\"0\":\"v-74bc627b\",\"1\":\"v-07445b00\",\"2\":\"v-2720daf4\",\"3\":\"v-5993bf33\",\"4\":\"v-d8295e3c\",\"5\":\"v-d8295e3c#介绍\",\"6\":\"v-d8295e3c#主页\",\"7\":\"v-d8295e3c#联系\",\"8\":\"v-fffb8e28\",\"9\":\"v-5c93668f\",\"10\":\"v-5c93668f#徽章\",\"11\":\"v-5c93668f#作者\",\"12\":\"v-5c93668f#仓库\",\"13\":\"v-5c93668f#介绍\",\"14\":\"v-fb0f0066\",\"15\":\"v-d04fcc52\",\"16\":\"v-7f3b5192\",\"17\":\"v-7f3b5192#arrayutils-flat2tree\",\"18\":\"v-7f3b5192#参数\",\"19\":\"v-7f3b5192#类型\",\"20\":\"v-7f3b5192#iarrayutilsflat2treeoptions\",\"21\":\"v-7f3b5192#返回\",\"22\":\"v-7f3b5192#arrayutils-tree2flat\",\"23\":\"v-7f3b5192#参数-1\",\"24\":\"v-7f3b5192#类型-1\",\"25\":\"v-7f3b5192#iarrayutilstree2flatoptions\",\"26\":\"v-7f3b5192#返回-1\",\"27\":\"v-7f3b5192#arrayutils-recursivetraversal\",\"28\":\"v-7f3b5192#参数-2\",\"29\":\"v-7f3b5192#类型-2\",\"30\":\"v-7f3b5192#iarrayutilsrecursivetraversaloptions\",\"31\":\"v-77c8e9a0\",\"32\":\"v-03c26d31\",\"33\":\"v-03c26d31#stringutils-isempty\",\"34\":\"v-03c26d31#参数\",\"35\":\"v-03c26d31#返回\",\"36\":\"v-03c26d31#stringutils-isnotempty\",\"37\":\"v-03c26d31#参数-1\",\"38\":\"v-03c26d31#返回-1\",\"39\":\"v-03c26d31#stringutils-split\",\"40\":\"v-03c26d31#参数-2\",\"41\":\"v-03c26d31#类型\",\"42\":\"v-03c26d31#istringutilssplitoptions\",\"43\":\"v-03c26d31#返回-2\",\"44\":\"v-03c26d31#stringutils-underline2hump\",\"45\":\"v-03c26d31#参数-3\",\"46\":\"v-03c26d31#返回-3\",\"47\":\"v-03c26d31#stringutils-hump2underline\",\"48\":\"v-03c26d31#参数-4\",\"49\":\"v-03c26d31#返回-4\",\"50\":\"v-03c26d31#stringutils-number2chinese\",\"51\":\"v-03c26d31#参数-5\",\"52\":\"v-03c26d31#返回-5\",\"53\":\"v-03c26d31#stringutils-converturl\",\"54\":\"v-03c26d31#参数-6\",\"55\":\"v-03c26d31#类型-1\",\"56\":\"v-03c26d31#istringutilsconverturloptions\",\"57\":\"v-03c26d31#返回-6\",\"58\":\"v-03c26d31#配置\",\"59\":\"v-03c26d31#stringutils-uuid\",\"60\":\"v-03c26d31#参数-7\",\"61\":\"v-03c26d31#类型-2\",\"62\":\"v-03c26d31#istringutilsuuidoptions\",\"63\":\"v-03c26d31#返回-7\",\"64\":\"v-03c26d31#stringutils-formatfilesize\",\"65\":\"v-03c26d31#参数-8\",\"66\":\"v-03c26d31#istringutilsformatfilesizeoptions\",\"67\":\"v-03c26d31#返回-8\"},\"fieldIds\":{\"h\":0,\"t\":1,\"c\":2},\"fieldLength\":{\"0\":[1,4],\"1\":[1,5],\"2\":[1,10],\"3\":[1,117],\"4\":[1],\"5\":[1,14],\"6\":[1,7],\"7\":[1,9],\"8\":[1,2],\"9\":[1],\"10\":[1],\"11\":[1,4],\"12\":[1,7],\"13\":[1,22],\"14\":[1,11],\"15\":[1,6],\"16\":[2,4],\"17\":[2,2],\"18\":[1,7],\"19\":[1],\"20\":[1,18],\"21\":[1,28],\"22\":[2,2],\"23\":[1,7],\"24\":[1],\"25\":[1,15],\"26\":[1,27],\"27\":[2,2],\"28\":[1,7],\"29\":[1],\"30\":[1,44],\"31\":[2,7],\"32\":[2,4],\"33\":[2,2],\"34\":[1,9],\"35\":[1,19],\"36\":[2,2],\"37\":[1,9],\"38\":[1,19],\"39\":[2,12],\"40\":[1,9],\"41\":[1],\"42\":[1,11],\"43\":[1,19],\"44\":[2,2],\"45\":[1,4],\"46\":[1,16],\"47\":[2,2],\"48\":[1,4],\"49\":[1,16],\"50\":[2,2],\"51\":[1,4],\"52\":[1,10],\"53\":[2,2],\"54\":[1,7],\"55\":[1],\"56\":[1,14],\"57\":[1,4],\"58\":[1,28],\"59\":[2,4],\"60\":[1,7],\"61\":[1],\"62\":[1,13],\"63\":[1,15],\"64\":[2,2],\"65\":[1,9],\"66\":[1,14],\"67\":[1,18]},\"averageFieldLength\":[1.2205882352941178,12.749419550547614],\"storedFields\":{\"0\":{\"h\":\"关于\",\"t\":[\"更新日志\",\"讨论交流\",\"开源协议\",\"小何同学\"]},\"1\":{\"h\":\"更新日志\",\"t\":[\"提示\",\"此处仅记录主要变更，详细更新日志请查看 GitHub Commits\"]},\"2\":{\"h\":\"讨论交流\",\"t\":[\"❓：若有疑问或BUG反馈，可提交 issues\",\"📫：HeDianGeng0601@outlook.com\",\"🐧：暂未开通\"]},\"3\":{\"h\":\"开源协议\",\"t\":[\"MIT License Copyright (c) 2023 xiaohe0601 Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \"]},\"4\":{\"h\":\"小何同学\"},\"5\":{\"h\":\"介绍\",\"t\":[\" Web前端开发、原生Android开发、Java开发，坐标成都\",\"JavaScript、TypeScript、Java、Kotlin、Dart\",\"项目经验丰富，对移动端开发有独到的见解\",\"注重代码质量，有严重的代码洁癖~\"]},\"6\":{\"h\":\"主页\",\"t\":[\"GitHub：https://github.com/xiaohe0601\",\"Gitee：https://gitee.com/xiaohe0601\"]},\"7\":{\"h\":\"联系\",\"t\":[\"📫：HeDianGeng0601@outlook.com\",\"🐧：1316740440（备注来意喔~ 😀）\"]},\"8\":{\"h\":\"指南\",\"t\":[\"特性\",\"快速上手\"]},\"9\":{\"h\":\"特性\"},\"10\":{\"h\":\"徽章\"},\"11\":{\"h\":\"作者\",\"t\":[\"小何同学 / github@xiaohe0601 / gitee@xiaohe0601\"]},\"12\":{\"h\":\"仓库\",\"t\":[\"🎈 github / 🎗️ gitee / 🎃 no more\"]},\"13\":{\"h\":\"介绍\",\"t\":[\"🍔 代码高质量，严谨规范\",\"🍚 代码严谨规范，结构清晰\",\"🍖 单元测试覆盖率100%\",\"🍜 完全使用TypeScript构建\",\"🍙 轻松提高开发效率\",\"🍟 基于最佳实践构建的JS工具箱\",\"🧀 所有方法均提供JsDoc\",\"🍳 无任何费用，支持免费商用\",\"🥗 更多特性等你发掘……\"]},\"14\":{\"h\":\"快速上手\",\"t\":[\"安装\",\"使用\",\"import { StringUtils } from \\\"xiaohejs\\\"; StringUtils.isEmpty(\\\"\\\"); \",\"或\",\"import { StringUtils } from \\\"xiaohejs/dist/esm\\\"; StringUtils.isEmpty(\\\"\\\"); \"]},\"15\":{\"h\":\"工具\",\"t\":[\"StringUtils 字符串\",\"ArrayUtils 数组\",\"GeometryUtils 几何计算\"]},\"16\":{\"h\":\"ArrayUtils 数组\",\"t\":[\"相关信息\",\"Since：\",\"作者：小何同学\"]},\"17\":{\"h\":\"ArrayUtils.flat2tree\",\"t\":[\" 扁平数组转树形结构数组\"]},\"18\":{\"h\":\"参数\",\"t\":[\"[array] (any[])：扁平数组\",\"[options] (IArrayUtilsFlat2TreeOptions)：配置项\"]},\"19\":{\"h\":\"类型\"},\"20\":{\"h\":\"IArrayUtilsFlat2TreeOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"key\",\"节点唯一标识属性名\",\"string\",\"-\",\"id\",\"parentKey\",\"父节点唯一标识属性名\",\"string\",\"-\",\"pid\",\"processor\",\"节点数据处理器\",\"(item: T) => T\",\"-\",\"(item) => (item)\"]},\"21\":{\"h\":\"返回\",\"t\":[\"T[]：树形结构数组\",\"使用示例（点击展开查看）\",\"const array = [{ id: 1, pid: 0, name: \\\"test1\\\" }, { id: 2, pid: 1, name: \\\"test2\\\" }, { id: 3, pid: 2, name: \\\"test3\\\" }, { id: 4, pid: 0, name: \\\"test4\\\" }, { id: 5, pid: 4, name: \\\"test5\\\" }, { id: 6, pid: 0, name: \\\"test6\\\" }]; ArrayUtils.flat2tree(array); // => // [{ // id: 1, // pid: 0, // name: \\\"test1\\\", // children: [{ // id: 2, // pid: 1, // name: \\\"test2\\\", // children: [{ // id: 3, // pid: 2, // name: \\\"test3\\\" // }] // }] // }, { // id: 4, // pid: 0, // name: \\\"test4\\\", // children: [{ // id: 5, // pid: 4, // name: \\\"test5\\\" // }] // }, { // id: 6, // pid: 0, // name: \\\"test6\\\" // }] \"]},\"22\":{\"h\":\"ArrayUtils.tree2flat\",\"t\":[\" 树形结构数组转扁平数组\"]},\"23\":{\"h\":\"参数\",\"t\":[\"[array] (any[])：树形结构数组\",\"[options] (IArrayUtilsTree2FlatOptions)：配置项\"]},\"24\":{\"h\":\"类型\"},\"25\":{\"h\":\"IArrayUtilsTree2FlatOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"childrenKey\",\"子节点集合属性名\",\"string\",\"-\",\"children\",\"processor\",\"节点数据处理器\",\"(item: T) => T\",\"-\",\"(item) => (item)\"]},\"26\":{\"h\":\"返回\",\"t\":[\"T[]：扁平数组\",\"使用示例（点击展开查看）\",\"const tree = [{ id: 1, name: \\\"test1\\\", children: [{ id: 2, name: \\\"test2\\\", children: [{ id: 3, name: \\\"test3\\\" }] }] }, { id: 4, name: \\\"test4\\\", children: [{ id: 5, name: \\\"test5\\\" }] }, { id: 6, name: \\\"test6\\\" }]; ArrayUtils.tree2flat(array); // => // [{ // id: 1, // name: \\\"test1\\\" // }, { // id: 2, // name: \\\"test2\\\" // }, { // id: 3, // name: \\\"test3\\\" // }, { // id: 4, // name: \\\"test4\\\" // }, { // id: 5, // name: \\\"test5\\\" // }, { // id: 6, // name: \\\"test6\\\" // }] \"]},\"27\":{\"h\":\"ArrayUtils.recursiveTraversal\",\"t\":[\" 递归遍历树形结构数组\"]},\"28\":{\"h\":\"参数\",\"t\":[\"[array] (any[])：树形结构数组\",\"[options] (IArrayUtilsRecursiveTraversalOptions)：配置项\"]},\"29\":{\"h\":\"类型\"},\"30\":{\"h\":\"IArrayUtilsRecursiveTraversalOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"childrenKey\",\"子节点集合属性名\",\"string\",\"-\",\"children\",\"parent\",\"父节点数据\",\"any\",\"-\",\"-\",\"processor\",\"节点数据处理器\",\"(item: T, parent?: T) => void\",\"-\",\"-\",\"使用示例（点击展开查看）\",\"const tree = [{ id: 1, name: \\\"test1\\\", children: [{ id: 2, name: \\\"test2\\\", children: [{ id: 3, name: \\\"test3\\\" }] }] }, { id: 4, name: \\\"test4\\\", children: [{ id: 5, name: \\\"test5\\\" }] }, { id: 6, name: \\\"test6\\\" }]; ArrayUtils.recursiveTraversal(tree, { processor(item, parent) { console.log(item, parent); } }); // => 依次为 test1、test2、test3、test4、test5、test6 对象本身及其父节点的引用 \"]},\"31\":{\"h\":\"GeometryUtils 几何计算\",\"t\":[\"相关信息\",\"Since：\",\"作者：小何同学\",\"提示\",\"文档正在编写中...\"]},\"32\":{\"h\":\"StringUtils 字符串\",\"t\":[\"相关信息\",\"Since：\",\"作者：小何同学\"]},\"33\":{\"h\":\"StringUtils.isEmpty\",\"t\":[\" 是否为空字符串\"]},\"34\":{\"h\":\"参数\",\"t\":[\"[str] (string)：字符串\",\"[trim=false] (boolean)：是否 String#trim()\"]},\"35\":{\"h\":\"返回\",\"t\":[\"boolean：是否为空字符串\",\"使用示例（点击展开查看）\",\"const str1 = null; const str2 = \\\"\\\"; const str3 = \\\" \\\"; const str4 = \\\"some string\\\"; StringUtils.isEmpty(str1); // => true StringUtils.isEmpty(str2); // => true StringUtils.isEmpty(str3, true); // => true StringUtils.isEmpty(str4); // => false \"]},\"36\":{\"h\":\"StringUtils.isNotEmpty\",\"t\":[\" 是否为非空字符串\"]},\"37\":{\"h\":\"参数\",\"t\":[\"[str] (string)：字符串\",\"[trim=false] (boolean)：是否 String#trim()\"]},\"38\":{\"h\":\"返回\",\"t\":[\"boolean：是否为非空字符串\",\"使用示例（点击展开查看）\",\"const str1 = null; const str2 = \\\"\\\"; const str3 = \\\" \\\"; const str4 = \\\"some string\\\"; StringUtils.isNotEmpty(str1); // => false StringUtils.isNotEmpty(str2); // => false StringUtils.isNotEmpty(str3, true); // => false StringUtils.isNotEmpty(str4); // => true \"]},\"39\":{\"h\":\"StringUtils.split\",\"t\":[\" 分割字符串\",\"该方法与 String#split 差别是当 str 为 null 或者 \\\"\\\" 时的返回值为 []，并且可选择是否先去除首尾的分隔符再进行分割\"]},\"40\":{\"h\":\"参数\",\"t\":[\"[str] (string)：待分割字符串\",\"[separator=\\\",\\\"] (string)：分隔符\",\"[options] (IStringUtilsSplitOptions)：配置项\"]},\"41\":{\"h\":\"类型\"},\"42\":{\"h\":\"IStringUtilsSplitOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"removeLeadingSeparator\",\"是否移除开头的分隔符\",\"boolean\",\"-\",\"true\",\"removeTrailingSeparator\",\"是否移除结尾的分隔符\",\"boolean\",\"-\",\"true\"]},\"43\":{\"h\":\"返回\",\"t\":[\"string[]：字符串分割结果数组\",\"使用示例（点击展开查看）\",\"const str1 = null; const str2 = \\\"\\\"; const str3 = \\\"some,string\\\"; const str4 = \\\";some;string;\\\"; StringUtils.split(str1); // => [] StringUtils.split(str2); // => [] StringUtils.split(str3); // => [\\\"some\\\", \\\"string\\\"] StringUtils.split(str4, \\\";\\\"); // => [\\\"some\\\", \\\"string\\\"] // 字符串首尾的分隔符被去掉了，如果使用String#split的返回值为 [\\\"\\\", \\\"some\\\", \\\"string\\\", \\\"\\\"] \"]},\"44\":{\"h\":\"StringUtils.underline2hump\",\"t\":[\" 下划线风格转驼峰风格字符串\"]},\"45\":{\"h\":\"参数\",\"t\":[\"[str] (string)：下划线风格字符串\"]},\"46\":{\"h\":\"返回\",\"t\":[\"string | null：驼峰风格字符串\",\"使用示例（点击展开查看）\",\"const str1 = null; const str2 = \\\"some_string\\\"; StringUtils.underline2hump(str1); // => null StringUtils.underline2hump(str2); // => \\\"someString\\\" \"]},\"47\":{\"h\":\"StringUtils.hump2underline\",\"t\":[\" 驼峰风格转下划线风格字符串\"]},\"48\":{\"h\":\"参数\",\"t\":[\"[str] (string)：驼峰风格字符串\"]},\"49\":{\"h\":\"返回\",\"t\":[\"string | null：下划线风格字符串\",\"使用示例（点击展开查看）\",\"const str1 = null; const str2 = \\\"someString\\\"; StringUtils.hump2underline(str1); // => null StringUtils.hump2underline(str2); // => \\\"some_string\\\" \"]},\"50\":{\"h\":\"StringUtils.number2chinese\",\"t\":[\" 阿拉伯数字转为中文数字\"]},\"51\":{\"h\":\"参数\",\"t\":[\"[num] (number)：阿拉伯数字\"]},\"52\":{\"h\":\"返回\",\"t\":[\"string：中文数字\",\"使用示例（点击展开查看）\",\"StringUtils.number2chinese(123); // => 一百二十三 \"]},\"53\":{\"h\":\"StringUtils.convertUrl\",\"t\":[\" 转换Url相对路径\"]},\"54\":{\"h\":\"参数\",\"t\":[\"[value] (string)：Url地址\",\"[options] (IStringUtilsConvertUrlOptions)：配置项\"]},\"55\":{\"h\":\"类型\"},\"56\":{\"h\":\"IStringUtilsConvertUrlOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"base\",\"Url基地址\",\"string\",\"-\",\"StringUtils.ConvertUrlBase\",\"prefix\",\"Url额外前缀\",\"string / null\",\"-\",\"-\"]},\"57\":{\"h\":\"返回\",\"t\":[\"string | null：转换后的Url地址\"]},\"58\":{\"h\":\"配置\",\"t\":[\"StringUtils.ConvertUrlBase=\\\"\\\" (string)：默认Url基地址\",\"StringUtils.ConvertUrlStartsExcludes=[\\\"http\\\",\\\"ws\\\",\\\"udp\\\",\\\"tcp\\\"] (string[])：例外的Url前缀\",\"使用示例（点击展开查看）\",\"const url1 = null; const url2 = \\\"/someurl\\\"; const url3 = \\\"someurl\\\"; const url4 = \\\"https://someurl\\\"; StringUtils.convertUrl(url1); // => null StringUtils.convertUrl(url2); // => \\\"#Url基地址/someurl\\\" StringUtils.convertUrl(url3); // => \\\"#Url基地址/someurl\\\" // 自动添加了斜杠 StringUtils.convertUrl(url4); // => \\\"https://someurl\\\" // 如果源路径带有协议头或者开头部分与base相同，则原样返回 \"]},\"59\":{\"h\":\"StringUtils.uuid\",\"t\":[\" 生成uuid\",\"若未指定长度会生成rfc4122标准的uuid，否则只是生成随机字符串\"]},\"60\":{\"h\":\"参数\",\"t\":[\"[length] (number)：生成uuid的长度\",\"[options] (IStringUtilsUuidOptions)：配置项\"]},\"61\":{\"h\":\"类型\"},\"62\":{\"h\":\"IStringUtilsUuidOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"radix\",\"生成uuid的基数\",\"number / null\",\"-\",\"-\",\"characters\",\"参与生成uuid的字符\",\"string\",\"-\",\"0~9A~Za~z\"]},\"63\":{\"h\":\"返回\",\"t\":[\"string：生成的uuid\",\"使用示例（点击展开查看）\",\"StringUtils.uuid(); // => \\\"3D617847-76B7-41A2-AFF9-59947C2ED853\\\" StringUtils.uuid(10); // => \\\"YETA5lGLyG\\\" \"]},\"64\":{\"h\":\"StringUtils.formatFileSize\",\"t\":[\" 格式化文件大小\"]},\"65\":{\"h\":\"参数\",\"t\":[\"[bit=0] (number)：文件大小（单位：b）\",\"[options] (IStringUtilsFormatFileSizeOptions)：配置项\"]},\"66\":{\"h\":\"IStringUtilsFormatFileSizeOptions\",\"t\":[\"参数\",\"说明\",\"类型\",\"可选值\",\"默认值\",\"lowercase\",\"单位是否小写\",\"boolean\",\"-\",\"true\",\"digits\",\"小数位数\",\"number / null\",\"-\",\"-\"]},\"67\":{\"h\":\"返回\",\"t\":[\"string：格式化结果\",\"使用示例（点击展开查看）\",\"StringUtils.formatFileSize(10000); // => \\\"9.765625kb\\\" StringUtils.formatFileSize(10000, {lowercase: false}); // => \\\"9.765625KB\\\" StringUtils.formatFileSize(10000, {digits: 2}); // => \\\"9.77kb\\\" StringUtils.formatFileSize(10000, {lowercase: false, digits: 2}); // => \\\"9.77KB\\\" \"]}},\"dirtCount\":0,\"index\":[[\"77kb\",{\"1\":{\"67\":2}}],[\"765625kb\",{\"1\":{\"67\":2}}],[\"76b7\",{\"1\":{\"63\":1}}],[\"9\",{\"1\":{\"67\":4}}],[\"格式化结果\",{\"1\":{\"67\":1}}],[\"格式化文件大小\",{\"1\":{\"64\":1}}],[\"小数位数\",{\"1\":{\"66\":1}}],[\"小何同学\",{\"0\":{\"4\":1},\"1\":{\"0\":1,\"11\":1,\"16\":1,\"31\":1,\"32\":1}}],[\"单位是否小写\",{\"1\":{\"66\":1}}],[\"单位\",{\"1\":{\"65\":1}}],[\"单元测试覆盖率100\",{\"1\":{\"13\":1}}],[\"文件大小\",{\"1\":{\"65\":1}}],[\"文档正在编写中\",{\"1\":{\"31\":1}}],[\"yeta5lglyg\",{\"1\":{\"63\":1}}],[\"生成的uuid\",{\"1\":{\"63\":1}}],[\"生成uuid的基数\",{\"1\":{\"62\":1}}],[\"生成uuid的长度\",{\"1\":{\"60\":1}}],[\"生成uuid\",{\"1\":{\"59\":1}}],[\"参与生成uuid的字符\",{\"1\":{\"62\":1}}],[\"参数\",{\"0\":{\"18\":1,\"23\":1,\"28\":1,\"34\":1,\"37\":1,\"40\":1,\"45\":1,\"48\":1,\"51\":1,\"54\":1,\"60\":1,\"65\":1},\"1\":{\"20\":1,\"25\":1,\"30\":1,\"42\":1,\"56\":1,\"62\":1,\"66\":1}}],[\"否则只是生成随机字符串\",{\"1\":{\"59\":1}}],[\"若未指定长度会生成rfc4122标准的uuid\",{\"1\":{\"59\":1}}],[\"若有疑问或bug反馈\",{\"1\":{\"2\":1}}],[\"则原样返回\",{\"1\":{\"58\":1}}],[\"如果源路径带有协议头或者开头部分与base相同\",{\"1\":{\"58\":1}}],[\"如果使用string\",{\"1\":{\"43\":1}}],[\"自动添加了斜杠\",{\"1\":{\"58\":1}}],[\"例外的url前缀\",{\"1\":{\"58\":1}}],[\"默认url基地址\",{\"1\":{\"58\":1}}],[\"默认值\",{\"1\":{\"20\":1,\"25\":1,\"30\":1,\"42\":1,\"56\":1,\"62\":1,\"66\":1}}],[\"配置\",{\"0\":{\"58\":1}}],[\"配置项\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"40\":1,\"54\":1,\"60\":1,\"65\":1}}],[\"转换后的url地址\",{\"1\":{\"57\":1}}],[\"转换url相对路径\",{\"1\":{\"53\":1}}],[\"value\",{\"1\":{\"54\":1}}],[\"void\",{\"1\":{\"30\":1}}],[\"一百二十三\",{\"1\":{\"52\":1}}],[\"中文数字\",{\"1\":{\"52\":1}}],[\"阿拉伯数字\",{\"1\":{\"51\":1}}],[\"阿拉伯数字转为中文数字\",{\"1\":{\"50\":1}}],[\"驼峰风格转下划线风格字符串\",{\"1\":{\"47\":1}}],[\"驼峰风格字符串\",{\"1\":{\"46\":1,\"48\":1}}],[\"|\",{\"1\":{\"46\":1,\"49\":1,\"57\":1}}],[\"下划线风格字符串\",{\"1\":{\"45\":1,\"49\":1}}],[\"下划线风格转驼峰风格字符串\",{\"1\":{\"44\":1}}],[\"uuid\",{\"0\":{\"59\":1},\"1\":{\"63\":2}}],[\"udp\",{\"1\":{\"58\":1}}],[\"url4\",{\"1\":{\"58\":2}}],[\"url3\",{\"1\":{\"58\":2}}],[\"url2\",{\"1\":{\"58\":2}}],[\"url1\",{\"1\":{\"58\":2}}],[\"url额外前缀\",{\"1\":{\"56\":1}}],[\"url基地址\",{\"1\":{\"56\":1,\"58\":2}}],[\"url地址\",{\"1\":{\"54\":1}}],[\"underline2hump\",{\"0\":{\"44\":1},\"1\":{\"46\":2}}],[\"use\",{\"1\":{\"3\":2}}],[\"分隔符\",{\"1\":{\"40\":1}}],[\"分割字符串\",{\"1\":{\"39\":1}}],[\"待分割字符串\",{\"1\":{\"40\":1}}],[\"并且可选择是否先去除首尾的分隔符再进行分割\",{\"1\":{\"39\":1}}],[\"时的返回值为\",{\"1\":{\"39\":1}}],[\"为\",{\"1\":{\"39\":1}}],[\"差别是当\",{\"1\":{\"39\":1}}],[\"该方法与\",{\"1\":{\"39\":1}}],[\"是否移除结尾的分隔符\",{\"1\":{\"42\":1}}],[\"是否移除开头的分隔符\",{\"1\":{\"42\":1}}],[\"是否为非空字符串\",{\"1\":{\"36\":1,\"38\":1}}],[\"是否为空字符串\",{\"1\":{\"33\":1,\"35\":1}}],[\"是否\",{\"1\":{\"34\":1,\"37\":1}}],[\"对象本身及其父节点的引用\",{\"1\":{\"30\":1}}],[\"对移动端开发有独到的见解\",{\"1\":{\"5\":1}}],[\"依次为\",{\"1\":{\"30\":1}}],[\"lowercase\",{\"1\":{\"66\":1,\"67\":2}}],[\"log\",{\"1\":{\"30\":1}}],[\"length\",{\"1\":{\"60\":1}}],[\"liability\",{\"1\":{\"3\":1}}],[\"liable\",{\"1\":{\"3\":1}}],[\"limited\",{\"1\":{\"3\":1}}],[\"limitation\",{\"1\":{\"3\":1}}],[\"license\",{\"1\":{\"3\":1}}],[\"父节点数据\",{\"1\":{\"30\":1}}],[\"父节点唯一标识属性名\",{\"1\":{\"20\":1}}],[\"递归遍历树形结构数组\",{\"1\":{\"27\":1}}],[\"子节点集合属性名\",{\"1\":{\"25\":1,\"30\":1}}],[\"6\",{\"1\":{\"21\":2,\"26\":2,\"30\":1}}],[\"59947c2ed853\",{\"1\":{\"63\":1}}],[\"5\",{\"1\":{\"21\":2,\"26\":2,\"30\":1}}],[\"41a2\",{\"1\":{\"63\":1}}],[\"4\",{\"1\":{\"21\":4,\"26\":2,\"30\":1}}],[\"3d617847\",{\"1\":{\"63\":1}}],[\"3\",{\"1\":{\"21\":2,\"26\":2,\"30\":1}}],[\"2\",{\"1\":{\"21\":4,\"26\":2,\"30\":1,\"67\":2}}],[\"2023\",{\"1\":{\"3\":1}}],[\"number\",{\"1\":{\"51\":1,\"60\":1,\"62\":1,\"65\":1,\"66\":1}}],[\"number2chinese\",{\"0\":{\"50\":1},\"1\":{\"52\":1}}],[\"num\",{\"1\":{\"51\":1}}],[\"null\",{\"1\":{\"35\":1,\"38\":1,\"39\":1,\"43\":1,\"46\":3,\"49\":3,\"56\":1,\"57\":1,\"58\":2,\"62\":1,\"66\":1}}],[\"name\",{\"1\":{\"21\":12,\"26\":12,\"30\":6}}],[\"no\",{\"1\":{\"3\":1,\"12\":1}}],[\"noninfringement\",{\"1\":{\"3\":1}}],[\"not\",{\"1\":{\"3\":1}}],[\"notice\",{\"1\":{\"3\":2}}],[\"0~9a~za~z\",{\"1\":{\"62\":1}}],[\"0\",{\"1\":{\"21\":6}}],[\"10000\",{\"1\":{\"67\":4}}],[\"10\",{\"1\":{\"63\":1}}],[\"123\",{\"1\":{\"52\":1}}],[\"1\",{\"1\":{\"21\":4,\"26\":2,\"30\":1}}],[\"1316740440\",{\"1\":{\"7\":1}}],[\"=\",{\"1\":{\"21\":1,\"26\":1,\"30\":1,\"35\":4,\"38\":4,\"43\":4,\"46\":2,\"49\":2,\"58\":4}}],[\"=>\",{\"1\":{\"20\":2,\"21\":1,\"25\":2,\"26\":1,\"30\":2,\"35\":4,\"38\":4,\"43\":4,\"46\":2,\"49\":2,\"52\":1,\"58\":4,\"63\":2,\"67\":4}}],[\"点击展开查看\",{\"1\":{\"21\":1,\"26\":1,\"30\":1,\"35\":1,\"38\":1,\"43\":1,\"46\":1,\"49\":1,\"52\":1,\"58\":1,\"63\":1,\"67\":1}}],[\"树形结构数组转扁平数组\",{\"1\":{\"22\":1}}],[\"树形结构数组\",{\"1\":{\"21\":1,\"23\":1,\"28\":1}}],[\"返回\",{\"0\":{\"21\":1,\"26\":1,\"35\":1,\"38\":1,\"43\":1,\"46\":1,\"49\":1,\"52\":1,\"57\":1,\"63\":1,\"67\":1}}],[\"节点数据处理器\",{\"1\":{\"20\":1,\"25\":1,\"30\":1}}],[\"节点唯一标识属性名\",{\"1\":{\"20\":1}}],[\"可选值\",{\"1\":{\"20\":1,\"25\":1,\"30\":1,\"42\":1,\"56\":1,\"62\":1,\"66\":1}}],[\"可提交\",{\"1\":{\"2\":1}}],[\"说明\",{\"1\":{\"20\":1,\"25\":1,\"30\":1,\"42\":1,\"56\":1,\"62\":1,\"66\":1}}],[\"类型\",{\"0\":{\"19\":1,\"24\":1,\"29\":1,\"41\":1,\"55\":1,\"61\":1},\"1\":{\"20\":1,\"25\":1,\"30\":1,\"42\":1,\"56\":1,\"62\":1,\"66\":1}}],[\"扁平数组\",{\"1\":{\"18\":1,\"26\":1}}],[\"扁平数组转树形结构数组\",{\"1\":{\"17\":1}}],[\"相关信息\",{\"1\":{\"16\":1,\"31\":1,\"32\":1}}],[\"几何计算\",{\"0\":{\"31\":1},\"1\":{\"15\":1}}],[\"数组\",{\"0\":{\"16\":1},\"1\":{\"15\":1}}],[\"字符串首尾的分隔符被去掉了\",{\"1\":{\"43\":1}}],[\"字符串分割结果数组\",{\"1\":{\"43\":1}}],[\"字符串\",{\"0\":{\"32\":1},\"1\":{\"15\":1,\"34\":1,\"37\":1}}],[\"工具\",{\"0\":{\"15\":1}}],[\"或者\",{\"1\":{\"39\":1}}],[\"或\",{\"1\":{\"14\":1}}],[\"xiaohejs\",{\"1\":{\"14\":2}}],[\"xiaohe0601\",{\"1\":{\"3\":1,\"6\":2,\"11\":2}}],[\"使用示例\",{\"1\":{\"21\":1,\"26\":1,\"30\":1,\"35\":1,\"38\":1,\"43\":1,\"46\":1,\"49\":1,\"52\":1,\"58\":1,\"63\":1,\"67\":1}}],[\"使用\",{\"1\":{\"14\":1}}],[\"安装\",{\"1\":{\"14\":1}}],[\"更多特性等你发掘\",{\"1\":{\"13\":1}}],[\"更新日志\",{\"0\":{\"1\":1},\"1\":{\"0\":1}}],[\"🥗\",{\"1\":{\"13\":1}}],[\"🧀\",{\"1\":{\"13\":1}}],[\"支持免费商用\",{\"1\":{\"13\":1}}],[\"无任何费用\",{\"1\":{\"13\":1}}],[\"所有方法均提供jsdoc\",{\"1\":{\"13\":1}}],[\"基于最佳实践构建的js工具箱\",{\"1\":{\"13\":1}}],[\"轻松提高开发效率\",{\"1\":{\"13\":1}}],[\"完全使用typescript构建\",{\"1\":{\"13\":1}}],[\"结构清晰\",{\"1\":{\"13\":1}}],[\"代码严谨规范\",{\"1\":{\"13\":1}}],[\"代码高质量\",{\"1\":{\"13\":1}}],[\"严谨规范\",{\"1\":{\"13\":1}}],[\"🍳\",{\"1\":{\"13\":1}}],[\"🍟\",{\"1\":{\"13\":1}}],[\"🍙\",{\"1\":{\"13\":1}}],[\"🍜\",{\"1\":{\"13\":1}}],[\"🍖\",{\"1\":{\"13\":1}}],[\"🍚\",{\"1\":{\"13\":1}}],[\"🍔\",{\"1\":{\"13\":1}}],[\"🎃\",{\"1\":{\"12\":1}}],[\"🎗️\",{\"1\":{\"12\":1}}],[\"🎈\",{\"1\":{\"12\":1}}],[\"仓库\",{\"0\":{\"12\":1}}],[\"作者\",{\"0\":{\"11\":1},\"1\":{\"16\":1,\"31\":1,\"32\":1}}],[\"徽章\",{\"0\":{\"10\":1}}],[\"快速上手\",{\"0\":{\"14\":1},\"1\":{\"8\":1}}],[\"特性\",{\"0\":{\"9\":1},\"1\":{\"8\":1}}],[\"指南\",{\"0\":{\"8\":1}}],[\"备注来意喔~\",{\"1\":{\"7\":1}}],[\"联系\",{\"0\":{\"7\":1}}],[\"主页\",{\"0\":{\"6\":1}}],[\"有严重的代码洁癖~\",{\"1\":{\"5\":1}}],[\"注重代码质量\",{\"1\":{\"5\":1}}],[\"项目经验丰富\",{\"1\":{\"5\":1}}],[\"key\",{\"1\":{\"20\":1}}],[\"kotlin\",{\"1\":{\"5\":1}}],[\"kind\",{\"1\":{\"3\":1}}],[\"java\",{\"1\":{\"5\":1}}],[\"javascript\",{\"1\":{\"5\":1}}],[\"java开发\",{\"1\":{\"5\":1}}],[\"坐标成都\",{\"1\":{\"5\":1}}],[\"原生android开发\",{\"1\":{\"5\":1}}],[\"介绍\",{\"0\":{\"5\":1,\"13\":1}}],[\"http\",{\"1\":{\"58\":1}}],[\"https\",{\"1\":{\"6\":2,\"58\":2}}],[\"hump2underline\",{\"0\":{\"47\":1},\"1\":{\"49\":2}}],[\"holders\",{\"1\":{\"3\":1}}],[\"hereby\",{\"1\":{\"3\":1}}],[\"hediangeng0601\",{\"1\":{\"2\":1,\"7\":1}}],[\"esm\",{\"1\":{\"14\":1}}],[\"event\",{\"1\":{\"3\":1}}],[\"express\",{\"1\":{\"3\":1}}],[\"b\",{\"1\":{\"65\":1}}],[\"bit=0\",{\"1\":{\"65\":1}}],[\"base\",{\"1\":{\"56\":1}}],[\"boolean\",{\"1\":{\"34\":1,\"35\":1,\"37\":1,\"38\":1,\"42\":2,\"66\":1}}],[\"but\",{\"1\":{\"3\":1}}],[\"be\",{\"1\":{\"3\":2}}],[\"ws\",{\"1\":{\"58\":1}}],[\"web前端开发\",{\"1\":{\"5\":1}}],[\"with\",{\"1\":{\"3\":1}}],[\"without\",{\"1\":{\"3\":3}}],[\"whether\",{\"1\":{\"3\":1}}],[\"whom\",{\"1\":{\"3\":1}}],[\"warranties\",{\"1\":{\"3\":1}}],[\"warranty\",{\"1\":{\"3\":1}}],[\"separator=\",{\"1\":{\"40\":1}}],[\"sell\",{\"1\":{\"3\":1}}],[\"split的返回值为\",{\"1\":{\"43\":1}}],[\"split\",{\"0\":{\"39\":1},\"1\":{\"39\":1,\"43\":4}}],[\"str4\",{\"1\":{\"35\":2,\"38\":2,\"43\":2}}],[\"str3\",{\"1\":{\"35\":2,\"38\":2,\"43\":2}}],[\"str2\",{\"1\":{\"35\":2,\"38\":2,\"43\":2,\"46\":2,\"49\":2}}],[\"str1\",{\"1\":{\"35\":2,\"38\":2,\"43\":2,\"46\":2,\"49\":2}}],[\"str\",{\"1\":{\"34\":1,\"37\":1,\"39\":1,\"40\":1,\"45\":1,\"48\":1}}],[\"string\",{\"1\":{\"20\":2,\"25\":1,\"30\":1,\"34\":2,\"35\":1,\"37\":2,\"38\":1,\"39\":1,\"40\":2,\"43\":6,\"45\":1,\"46\":2,\"48\":1,\"49\":2,\"52\":1,\"54\":1,\"56\":2,\"57\":1,\"58\":2,\"62\":1,\"63\":1,\"67\":1}}],[\"stringutils\",{\"0\":{\"32\":1,\"33\":1,\"36\":1,\"39\":1,\"44\":1,\"47\":1,\"50\":1,\"53\":1,\"59\":1,\"64\":1},\"1\":{\"14\":4,\"15\":1,\"35\":4,\"38\":4,\"43\":4,\"46\":2,\"49\":2,\"52\":1,\"56\":1,\"58\":6,\"63\":2,\"67\":4}}],[\"since\",{\"1\":{\"16\":1,\"31\":1,\"32\":1}}],[\"shall\",{\"1\":{\"3\":2}}],[\"substantial\",{\"1\":{\"3\":1}}],[\"subject\",{\"1\":{\"3\":1}}],[\"sublicense\",{\"1\":{\"3\":1}}],[\"someurl\",{\"1\":{\"58\":6}}],[\"somestring\",{\"1\":{\"46\":1,\"49\":1}}],[\"some\",{\"1\":{\"35\":1,\"38\":1,\"43\":5,\"46\":1,\"49\":1}}],[\"so\",{\"1\":{\"3\":1}}],[\"software\",{\"1\":{\"3\":9}}],[\"prefix\",{\"1\":{\"56\":1}}],[\"processor\",{\"1\":{\"20\":1,\"25\":1,\"30\":2}}],[\"provided\",{\"1\":{\"3\":1}}],[\"pid\",{\"1\":{\"20\":1,\"21\":12}}],[\"parent\",{\"1\":{\"30\":4}}],[\"parentkey\",{\"1\":{\"20\":1}}],[\"particular\",{\"1\":{\"3\":1}}],[\"purpose\",{\"1\":{\"3\":1}}],[\"publish\",{\"1\":{\"3\":1}}],[\"portions\",{\"1\":{\"3\":1}}],[\"permit\",{\"1\":{\"3\":1}}],[\"permission\",{\"1\":{\"3\":2}}],[\"persons\",{\"1\":{\"3\":1}}],[\"person\",{\"1\":{\"3\":1}}],[\"more\",{\"1\":{\"12\":1}}],[\"modify\",{\"1\":{\"3\":1}}],[\"merchantability\",{\"1\":{\"3\":1}}],[\"merge\",{\"1\":{\"3\":1}}],[\"mit\",{\"1\":{\"3\":1}}],[\"radix\",{\"1\":{\"62\":1}}],[\"removetrailingseparator\",{\"1\":{\"42\":1}}],[\"removeleadingseparator\",{\"1\":{\"42\":1}}],[\"recursivetraversal\",{\"0\":{\"27\":1},\"1\":{\"30\":1}}],[\"restriction\",{\"1\":{\"3\":1}}],[\"rights\",{\"1\":{\"3\":1}}],[\"iarrayutilsrecursivetraversaloptions\",{\"0\":{\"30\":1},\"1\":{\"28\":1}}],[\"iarrayutilstree2flatoptions\",{\"0\":{\"25\":1},\"1\":{\"23\":1}}],[\"iarrayutilsflat2treeoptions\",{\"0\":{\"20\":1},\"1\":{\"18\":1}}],[\"item\",{\"1\":{\"20\":3,\"25\":3,\"30\":3}}],[\"id\",{\"1\":{\"20\":1,\"21\":12,\"26\":12,\"30\":6}}],[\"import\",{\"1\":{\"14\":2}}],[\"implied\",{\"1\":{\"3\":1}}],[\"included\",{\"1\":{\"3\":1}}],[\"including\",{\"1\":{\"3\":2}}],[\"in\",{\"1\":{\"3\":6}}],[\"istringutilsformatfilesizeoptions\",{\"0\":{\"66\":1},\"1\":{\"65\":1}}],[\"istringutilsuuidoptions\",{\"0\":{\"62\":1},\"1\":{\"60\":1}}],[\"istringutilsconverturloptions\",{\"0\":{\"56\":1},\"1\":{\"54\":1}}],[\"istringutilssplitoptions\",{\"0\":{\"42\":1},\"1\":{\"40\":1}}],[\"isnotempty\",{\"0\":{\"36\":1},\"1\":{\"38\":4}}],[\"isempty\",{\"0\":{\"33\":1},\"1\":{\"14\":2,\"35\":4}}],[\"is\",{\"1\":{\"3\":4}}],[\"issues\",{\"1\":{\"2\":1}}],[\"digits\",{\"1\":{\"66\":1,\"67\":2}}],[\"dist\",{\"1\":{\"14\":1}}],[\"distribute\",{\"1\":{\"3\":1}}],[\"dart\",{\"1\":{\"5\":1}}],[\"damages\",{\"1\":{\"3\":1}}],[\"do\",{\"1\":{\"3\":1}}],[\"documentation\",{\"1\":{\"3\":1}}],[\"dealings\",{\"1\":{\"3\":1}}],[\"deal\",{\"1\":{\"3\":1}}],[\"false\",{\"1\":{\"35\":1,\"38\":3,\"67\":2}}],[\"flat2tree\",{\"0\":{\"17\":1},\"1\":{\"21\":1}}],[\"from\",{\"1\":{\"3\":1,\"14\":2}}],[\"free\",{\"1\":{\"3\":1}}],[\"formatfilesize\",{\"0\":{\"64\":1},\"1\":{\"67\":4}}],[\"for\",{\"1\":{\"3\":2}}],[\"following\",{\"1\":{\"3\":1}}],[\"fitness\",{\"1\":{\"3\":1}}],[\"files\",{\"1\":{\"3\":1}}],[\"furnished\",{\"1\":{\"3\":1}}],[\"tcp\",{\"1\":{\"58\":1}}],[\"true\",{\"1\":{\"35\":4,\"38\":2,\"42\":2,\"66\":1}}],[\"trim\",{\"1\":{\"34\":1,\"37\":1}}],[\"trim=false\",{\"1\":{\"34\":1,\"37\":1}}],[\"tree\",{\"1\":{\"26\":1,\"30\":2}}],[\"tree2flat\",{\"0\":{\"22\":1},\"1\":{\"26\":1}}],[\"test6\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"test5\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"test4\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"test3\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"test2\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"test1\",{\"1\":{\"21\":2,\"26\":2,\"30\":2}}],[\"t\",{\"1\":{\"20\":2,\"21\":1,\"25\":2,\"26\":1,\"30\":2}}],[\"typescript\",{\"1\":{\"5\":1}}],[\"the\",{\"1\":{\"3\":14}}],[\"this\",{\"1\":{\"3\":2}}],[\"tort\",{\"1\":{\"3\":1}}],[\"to\",{\"1\":{\"3\":8}}],[\"aff9\",{\"1\":{\"63\":1}}],[\"array\",{\"1\":{\"18\":1,\"21\":2,\"23\":1,\"26\":1,\"28\":1}}],[\"arrayutils\",{\"0\":{\"16\":1,\"17\":1,\"22\":1,\"27\":1},\"1\":{\"15\":1,\"21\":1,\"26\":1,\"30\":1}}],[\"arising\",{\"1\":{\"3\":1}}],[\"action\",{\"1\":{\"3\":1}}],[\"authors\",{\"1\":{\"3\":1}}],[\"as\",{\"1\":{\"3\":1}}],[\"associated\",{\"1\":{\"3\":1}}],[\"all\",{\"1\":{\"3\":1}}],[\"above\",{\"1\":{\"3\":1}}],[\"an\",{\"1\":{\"3\":1}}],[\"and\",{\"1\":{\"3\":5}}],[\"any\",{\"1\":{\"3\":3,\"18\":1,\"23\":1,\"28\":1,\"30\":1}}],[\"a\",{\"1\":{\"3\":2}}],[\"options\",{\"1\":{\"18\":1,\"23\":1,\"28\":1,\"40\":1,\"54\":1,\"60\":1,\"65\":1}}],[\"out\",{\"1\":{\"3\":1}}],[\"outlook\",{\"1\":{\"2\":1,\"7\":1}}],[\"otherwise\",{\"1\":{\"3\":1}}],[\"other\",{\"1\":{\"3\":2}}],[\"or\",{\"1\":{\"3\":9}}],[\"obtaining\",{\"1\":{\"3\":1}}],[\"of\",{\"1\":{\"3\":8}}],[\"geometryutils\",{\"0\":{\"31\":1},\"1\":{\"15\":1}}],[\"gitee\",{\"1\":{\"6\":2,\"11\":1,\"12\":1}}],[\"github\",{\"1\":{\"1\":1,\"6\":2,\"11\":1,\"12\":1}}],[\"granted\",{\"1\":{\"3\":1}}],[\"characters\",{\"1\":{\"62\":1}}],[\"charge\",{\"1\":{\"3\":1}}],[\"childrenkey\",{\"1\":{\"25\":1,\"30\":1}}],[\"children\",{\"1\":{\"21\":3,\"25\":1,\"26\":3,\"30\":4}}],[\"claim\",{\"1\":{\"3\":1}}],[\"c\",{\"1\":{\"3\":1}}],[\"converturlstartsexcludes=\",{\"1\":{\"58\":1}}],[\"converturlbase=\",{\"1\":{\"58\":1}}],[\"converturlbase\",{\"1\":{\"56\":1}}],[\"converturl\",{\"0\":{\"53\":1},\"1\":{\"58\":4}}],[\"console\",{\"1\":{\"30\":1}}],[\"const\",{\"1\":{\"21\":1,\"26\":1,\"30\":1,\"35\":4,\"38\":4,\"43\":4,\"46\":2,\"49\":2,\"58\":4}}],[\"connection\",{\"1\":{\"3\":1}}],[\"contract\",{\"1\":{\"3\":1}}],[\"conditions\",{\"1\":{\"3\":1}}],[\"copies\",{\"1\":{\"3\":2}}],[\"copy\",{\"1\":{\"3\":2}}],[\"copyright\",{\"1\":{\"3\":3}}],[\"com\",{\"1\":{\"2\":1,\"6\":2,\"7\":1}}],[\"commits\",{\"1\":{\"1\":1}}],[\"暂未开通\",{\"1\":{\"2\":1}}],[\"😀\",{\"1\":{\"7\":1}}],[\"🐧\",{\"1\":{\"2\":1,\"7\":1}}],[\"📫\",{\"1\":{\"2\":1,\"7\":1}}],[\"❓\",{\"1\":{\"2\":1}}],[\"详细更新日志请查看\",{\"1\":{\"1\":1}}],[\"此处仅记录主要变更\",{\"1\":{\"1\":1}}],[\"提示\",{\"1\":{\"1\":1,\"31\":1}}],[\"开源协议\",{\"0\":{\"3\":1},\"1\":{\"0\":1}}],[\"讨论交流\",{\"0\":{\"2\":1},\"1\":{\"0\":1}}],[\"关于\",{\"0\":{\"0\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,zt(t,{fields:["h","t","c"],storeFields:["h","t","c"]})]));self.onmessage=({data:{type:e="all",query:t,locale:s,options:n}})=>{e==="suggest"?self.postMessage(st(t,v[s],n)):e==="search"?self.postMessage(et(t,v[s],n)):self.postMessage({suggestions:st(t,v[s],n),results:et(t,v[s],n)})};
//# sourceMappingURL=index.js.map
